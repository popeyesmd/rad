/*
 * JS for tests generated by Appery.io
 *
 */

Appery.getProjectGUID = function() {
    return '76c1243c-7c9f-4fcc-bd10-0ef35c0a1435';
}

function navigateTo(outcome, useAjax) {
    Appery.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Appery.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Appery.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Appery.setDetailContent(pageUrl);
}

Appery.AppPages = [{
    "name": "CarePass_Login",
    "location": "CarePass_Login.html"
}, {
    "name": "body",
    "location": "body.html"
}, {
    "name": "CarePass_Fitness_Activity_All",
    "location": "CarePass_Fitness_Activity_All.html"
}, {
    "name": "Disclaimer",
    "location": "Disclaimer.html"
}, {
    "name": "CarePass_BodyMeasurements",
    "location": "CarePass_BodyMeasurements.html"
}, {
    "name": "CarePass_Fitness_Activity_New",
    "location": "CarePass_Fitness_Activity_New.html"
}, {
    "name": "CarePass_ErrorPopUp",
    "location": "CarePass_ErrorPopUp.html"
}, {
    "name": "CarePass_Fitness_Activity_Filter",
    "location": "CarePass_Fitness_Activity_Filter.html"
}, {
    "name": "CarePass_BodyMeasurements_New",
    "location": "CarePass_BodyMeasurements_New.html"
}, {
    "name": "details",
    "location": "details.html"
}, {
    "name": "map2",
    "location": "map2.html"
}, {
    "name": "CarePass_BodyMeasurementsType_Filter",
    "location": "CarePass_BodyMeasurementsType_Filter.html"
}, {
    "name": "CarePass_Fitness_Activity_TimeLine",
    "location": "CarePass_Fitness_Activity_TimeLine.html"
}, {
    "name": "map",
    "location": "map.html"
}, {
    "name": "CarePass_Chart",
    "location": "CarePass_Chart.html"
}, {
    "name": "CarePass_Fitness_Activity_Single",
    "location": "CarePass_Fitness_Activity_Single.html"
}, {
    "name": "action",
    "location": "action.html"
}, {
    "name": "load",
    "location": "load.html"
}, {
    "name": "cancer",
    "location": "cancer.html"
}, {
    "name": "tests",
    "location": "tests.html"
}, {
    "name": "start",
    "location": "start.html"
}, {
    "name": "CarePass_BodyMeasurements_Single",
    "location": "CarePass_BodyMeasurements_Single.html"
}, {
    "name": "link",
    "location": "link.html"
}];

tests_js = function(runBeforeShow) { /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilelabel_16': 'tests_mobilelabel_16',
        'mobilegrid_18': 'tests_mobilegrid_18',
        'mobilegridcell_19': 'tests_mobilegridcell_19',
        'mobileimage_23': 'tests_mobileimage_23',
        'mobilegridcell_21': 'tests_mobilegridcell_21',
        'mobilelist_12': 'tests_mobilelist_12',
        'procedurelist': 'tests_procedurelist',
        'mobilelistitembutton_14': 'tests_mobilelistitembutton_14',
        'procedurelabel': 'tests_procedurelabel',
        'cptlabel': 'tests_cptlabel',
        'idlabel': 'tests_idlabel',
        'mobilebutton_15': 'tests_mobilebutton_15'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fixing issue https://github.com/jquery/jquery-mobile/issues/5424 on Windows Phone
        $("div[data-role=page] div[data-role=footer]").css("bottom", "-36px");
    }

    if (Appery.getTargetPlatform == "I") {
        $.each(window.n2id, function(name, id) {
            var elApperyRole = $("#" + id).attr("data-role");
            if (elApperyRole != "appery_label" && elApperyRole != "appery_link") {
                var appleDataSelector = "#" + id + "[x-apple-data-detectors], #" + id + " [x-apple-data-detectors]";
                $(appleDataSelector).attr("x-apple-data-detectors", "false");
            }
        });
    }

    Appery.CurrentScreen = 'tests';

    /*
     * Nonvisual components
     */
    var datasources = [];

    procedurelistservice = new Appery.DataSource(procedureDB_procedure_list_service, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("tests");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['$'],
            'ID': 'procedurelist',
            'SET': [{
                'PATH': ['procedure'],
                'ID': 'procedurelabel',
                'ATTR': '@'
            }, {
                'PATH': ['_id'],
                'ID': 'idlabel',
                'ATTR': '@'
            }]
        }],
        'requestMapping': [{
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }]
    });

    datasources.push(procedurelistservice);

    readservice = new Appery.DataSource(procedureDB_procedure_read_service, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("tests");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [],
        'requestMapping': [{
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }]
    });

    datasources.push(readservice);

    procedurelistservice2 = new Appery.DataSource(procedureDB_procedureCPT_list_service, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("tests");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['$'],
            'ID': 'procedurelist',
            'SET': [{
                'PATH': ['procedure'],
                'ID': 'procedurelabel',
                'ATTR': '@'
            }, {
                'PATH': ['CPT'],
                'ID': 'cptlabel',
                'ATTR': '@'
            }, {
                'PATH': ['_id'],
                'ID': 'idlabel',
                'ATTR': '@'
            }]
        }],
        'requestMapping': [{
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }]
    });

    datasources.push(procedurelistservice2);

    /*
     * Events and handlers
     */

    // Before Show
    tests_beforeshow = function() {
        Appery.CurrentScreen = "tests";
        for (var idx = 0; idx < datasources.length; idx++) {
            datasources[idx].__setupDisplay();
        }
    }

    // On Load
    screen_3671_onLoad = tests_onLoad = function() {
        screen_3671_elementsExtraJS();
        try {
            procedurelistservice.execute({})
        } catch (ex) {
            console.log(ex.name + '  ' + ex.message);
            hideSpinner();
        };
        try {
            procedurelistservice2.execute({})
        } catch (ex) {
            console.log(ex.name + '  ' + ex.message);
            hideSpinner();
        };
        Appery('mobileimage_23').css('margin', 'auto');
        Appery('mobileimage_23').css('display', 'block');

        // TODO fire device events only if necessary (with JS logic)
        tests_deviceEvents();
        tests_windowEvents();
        screen_3671_elementsEvents();
    }

    // screen window events
    screen_3671_windowEvents = tests_windowEvents = function() {

        $('#tests').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });

    }

    // device events
    tests_deviceEvents = function() {

        document.addEventListener("deviceready", function() {

        });
    }

    // screen elements extra js
    screen_3671_elementsExtraJS = tests_elementsExtraJS = function() {
        // screen (tests) extra code

        /* mobilelist_12 */

        listView = $("#tests_mobilelist_12");
        theme = listView.attr("data-theme");
        if (typeof theme !== 'undefined') {
            var themeClass = "ui-btn-up-" + theme;
            listItem = $("#tests_mobilelist_12 .ui-li-static");
            $.each(listItem, function(index, value) {
                $(this).addClass(themeClass);
            });
        }

        /* procedurelist */

    }

    // screen elements handler
    screen_3671_elementsEvents = tests_elementsEvents = function() {

        $("a :input,a a,a fieldset label").live({
            click: function(event) {
                event.stopPropagation();
            }
        });

        $('#tests_mobilecontainer1 [name="procedurelist"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    setVar_('_testid', 'tests_idlabel', 'text', '', this);
                    Appery.navigateTo('details', {
                        reverse: false
                    });

                }
            },
        });

        $('#tests_mobilecontainer1 [name="mobilebutton_15"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery.navigateTo('body', {
                        reverse: false
                    });

                }
            },
        });

    }

    $("#tests").die("pagebeforeshow").live("pagebeforeshow", function(event, ui) {
        tests_beforeshow();
    });

    if (runBeforeShow) {
        tests_beforeshow();
    } else {
        tests_onLoad();
    }

}

$("#tests").die("pageinit").live("pageinit", function(event, ui) {
    Appery.processSelectMenu($(this));
    tests_js();
});