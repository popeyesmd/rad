/*
 * JS for CarePass_BodyMeasurements_New generated by Appery.io
 *
 */

Appery.getProjectGUID = function() {
    return '76c1243c-7c9f-4fcc-bd10-0ef35c0a1435';
}

function navigateTo(outcome, useAjax) {
    Appery.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Appery.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Appery.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Appery.setDetailContent(pageUrl);
}

Appery.AppPages = [{
    "name": "CarePass_Login",
    "location": "CarePass_Login.html"
}, {
    "name": "body",
    "location": "body.html"
}, {
    "name": "CarePass_Fitness_Activity_All",
    "location": "CarePass_Fitness_Activity_All.html"
}, {
    "name": "Disclaimer",
    "location": "Disclaimer.html"
}, {
    "name": "CarePass_BodyMeasurements",
    "location": "CarePass_BodyMeasurements.html"
}, {
    "name": "CarePass_Fitness_Activity_New",
    "location": "CarePass_Fitness_Activity_New.html"
}, {
    "name": "CarePass_ErrorPopUp",
    "location": "CarePass_ErrorPopUp.html"
}, {
    "name": "CarePass_Fitness_Activity_Filter",
    "location": "CarePass_Fitness_Activity_Filter.html"
}, {
    "name": "CarePass_BodyMeasurements_New",
    "location": "CarePass_BodyMeasurements_New.html"
}, {
    "name": "details",
    "location": "details.html"
}, {
    "name": "map2",
    "location": "map2.html"
}, {
    "name": "CarePass_BodyMeasurementsType_Filter",
    "location": "CarePass_BodyMeasurementsType_Filter.html"
}, {
    "name": "CarePass_Fitness_Activity_TimeLine",
    "location": "CarePass_Fitness_Activity_TimeLine.html"
}, {
    "name": "map",
    "location": "map.html"
}, {
    "name": "CarePass_Chart",
    "location": "CarePass_Chart.html"
}, {
    "name": "CarePass_Fitness_Activity_Single",
    "location": "CarePass_Fitness_Activity_Single.html"
}, {
    "name": "action",
    "location": "action.html"
}, {
    "name": "load",
    "location": "load.html"
}, {
    "name": "cancer",
    "location": "cancer.html"
}, {
    "name": "tests",
    "location": "tests.html"
}, {
    "name": "start",
    "location": "start.html"
}, {
    "name": "CarePass_BodyMeasurements_Single",
    "location": "CarePass_BodyMeasurements_Single.html"
}, {
    "name": "link",
    "location": "link.html"
}];

CarePass_BodyMeasurements_New_js = function(runBeforeShow) { /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilenavbar2_2': 'CarePass_BodyMeasurements_New_mobilenavbar2_2',
        'mobilenavbaritem4_3': 'CarePass_BodyMeasurements_New_mobilenavbaritem4_3',
        'mobilenavbaritem4_4': 'CarePass_BodyMeasurements_New_mobilenavbaritem4_4',
        'mobilenavbaritem4_5': 'CarePass_BodyMeasurements_New_mobilenavbaritem4_5',
        'mobilelabel1_14': 'CarePass_BodyMeasurements_New_mobilelabel1_14',
        'addMType': 'CarePass_BodyMeasurements_New_addMType',
        'mobileselectmenuitem1': 'CarePass_BodyMeasurements_New_mobileselectmenuitem1',
        'mobilelabel1_17': 'CarePass_BodyMeasurements_New_mobilelabel1_17',
        'addMValue': 'CarePass_BodyMeasurements_New_addMValue',
        'mobilelabel1_19': 'CarePass_BodyMeasurements_New_mobilelabel1_19',
        'addMUnits': 'CarePass_BodyMeasurements_New_addMUnits',
        'mobileselectmenuitem1': 'CarePass_BodyMeasurements_New_mobileselectmenuitem1',
        'mobilelabel1_22': 'CarePass_BodyMeasurements_New_mobilelabel1_22',
        'addMDate': 'CarePass_BodyMeasurements_New_addMDate',
        'mobilelabel1_24': 'CarePass_BodyMeasurements_New_mobilelabel1_24',
        'mobilegrid_25': 'CarePass_BodyMeasurements_New_mobilegrid_25',
        'mobilegridcell_26': 'CarePass_BodyMeasurements_New_mobilegridcell_26',
        'addMH': 'CarePass_BodyMeasurements_New_addMH',
        'mobilelabel1_48': 'CarePass_BodyMeasurements_New_mobilelabel1_48',
        'mobilegridcell_27': 'CarePass_BodyMeasurements_New_mobilegridcell_27',
        'addMM': 'CarePass_BodyMeasurements_New_addMM',
        'mobilelabel1_49': 'CarePass_BodyMeasurements_New_mobilelabel1_49',
        'mobilegridcell_30': 'CarePass_BodyMeasurements_New_mobilegridcell_30',
        'addMS': 'CarePass_BodyMeasurements_New_addMS',
        'mobilegridcell_31': 'CarePass_BodyMeasurements_New_mobilegridcell_31',
        'addMAmPm': 'CarePass_BodyMeasurements_New_addMAmPm',
        'mobileselectmenuitem1': 'CarePass_BodyMeasurements_New_mobileselectmenuitem1',
        'mobilelabel1_52': 'CarePass_BodyMeasurements_New_mobilelabel1_52',
        'notes': 'CarePass_BodyMeasurements_New_notes',
        'mobilelabel1_50': 'CarePass_BodyMeasurements_New_mobilelabel1_50',
        'addMPost': 'CarePass_BodyMeasurements_New_addMPost',
        'mobilenavbar2_10': 'CarePass_BodyMeasurements_New_mobilenavbar2_10',
        'mobilenavbaritem4_11': 'CarePass_BodyMeasurements_New_mobilenavbaritem4_11',
        'mobilenavbaritem4_12': 'CarePass_BodyMeasurements_New_mobilenavbaritem4_12',
        'mobilenavbaritem4_13': 'CarePass_BodyMeasurements_New_mobilenavbaritem4_13'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fixing issue https://github.com/jquery/jquery-mobile/issues/5424 on Windows Phone
        $("div[data-role=page] div[data-role=footer]").css("bottom", "-36px");
    }

    if (Appery.getTargetPlatform == "I") {
        $.each(window.n2id, function(name, id) {
            var elApperyRole = $("#" + id).attr("data-role");
            if (elApperyRole != "appery_label" && elApperyRole != "appery_link") {
                var appleDataSelector = "#" + id + "[x-apple-data-detectors], #" + id + " [x-apple-data-detectors]";
                $(appleDataSelector).attr("x-apple-data-detectors", "false");
            }
        });
    }

    Appery.CurrentScreen = 'CarePass_BodyMeasurements_New';

    /*
     * Nonvisual components
     */
    var datasources = [];

    NewMeasure = new Appery.DataSource(CarePass_BodyMeasurements_POST, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("CarePass_BodyMeasurements_New");
        },
        'onSuccess': function(data) {
            localStorage.setItem('message', 'New measurement was added successfully!');
            Appery.navigateTo('CarePass_BodyMeasurements_Single', {
                reverse: false
            });
        },
        'onError': function(jqXHR, textStatus, errorThrown) {
            Helper.alertError(jqXHR.responseText);
        },
        'responseMapping': [{
            'PATH': ['id'],
            'ID': '___local_storage___',
            'ATTR': 'measurementID'
        }],
        'requestMapping': [{
            'PATH': ['Authorization'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ID': '___local_storage___',
            'ATTR': 'token',
            'TRANSFORMATION': function(value) {
                return "Bearer " + value;
            }
        }, {
            'PATH': ['Accept'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': 'application/json'
        }, {
            'PATH': ['measurementType'],
            'TYPE': 'STRING',
            'ID': 'addMType',
            'ATTR': 'value'
        }, {
            'PATH': ['numericValue'],
            'TYPE': 'STRING',
            'ID': 'addMValue',
            'ATTR': 'value',
            'TRANSFORMATION': function(value) {
                return parseInt(value);
            }
        }, {
            'PATH': ['valueUnit'],
            'TYPE': 'STRING',
            'ID': 'addMUnits',
            'ATTR': 'value'
        }, {
            'PATH': ['date'],
            'TYPE': 'STRING',
            'ID': 'addMDate',
            'ATTR': 'defaultDateValue'
        }, {
            'PATH': ['time'],
            'TYPE': 'STRING',
            'ID': 'addMDate',
            'ATTR': 'defaultDateValue',
            'TRANSFORMATION': function(value) {
                var time = Helper.correctTimeFormat(localStorage.getItem("time"));
                return value + time;
            }
        }, {
            'PATH': ['notes'],
            'TYPE': 'STRING',
            'ID': 'notes',
            'ATTR': 'value'
        }, {
            'PATH': ['sourceType'],
            'TYPE': 'STRING',
            'ATTR': 'Device'
        }, {
            'PATH': ['Authorization'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': 'Bearer mzykqmx93mxxa9ssjncjdqhh'
        }, {
            'PATH': ['Accept'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': 'application/json'
        }, {
            'PATH': ['sourceType'],
            'TYPE': 'STRING',
            'ATTR': 'Device'
        }, {
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'https://api.carepass.com/user-directory-api/users/currentUser/health/body/measurements'
        }, {
            'PATH': ['appery-transformation'],
            'HEADER': true,
            'ATTR': 'checkTunnel'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1396056549723'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': '2400673'
        }]
    });

    datasources.push(NewMeasure);

    MeasurementUnits = new Appery.DataSource(CarePass_Measurement_query_service, {
        'onComplete': function(jqXHR, textStatus) {
            Helper.hideOverview();

            $t.refreshScreenFormElements("CarePass_BodyMeasurements_New");
        },
        'onSuccess': function(data) {
            if ($('.addMUnits option:first').text() == "") {
                $('.addMUnits option:first').text("-");
                $('.addMUnits select').trigger("change");
            };
        },
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['$'],
            'ID': 'addMUnits-0',
            'SET': [{
                'PATH': ['MeasurementUnits'],
                'ID': 'addMUnits-0',
                'ATTR': 'value'
            }, {
                'PATH': ['MeasurementLabel'],
                'ID': 'addMUnits-0',
                'ATTR': '@'
            }]
        }],
        'requestMapping': [{
            'PATH': ['X-Tiggzi-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }, {
            'PATH': ['where'],
            'TYPE': 'STRING',
            'ID': 'addMType',
            'ATTR': 'value',
            'TRANSFORMATION': function(value) {
                return '{"Measurement":"' + value + '"}';
            }
        }]
    });

    datasources.push(MeasurementUnits);

    /*
     * Events and handlers
     */

    // Before Show
    CarePass_BodyMeasurements_New_beforeshow = function() {
        Appery.CurrentScreen = "CarePass_BodyMeasurements_New";
        for (var idx = 0; idx < datasources.length; idx++) {
            datasources[idx].__setupDisplay();
        }
    }

    // On Load
    screen_6DED_onLoad = CarePass_BodyMeasurements_New_onLoad = function() {
        screen_6DED_elementsExtraJS();

        // TODO fire device events only if necessary (with JS logic)
        CarePass_BodyMeasurements_New_deviceEvents();
        CarePass_BodyMeasurements_New_windowEvents();
        screen_6DED_elementsEvents();
    }

    // screen window events
    screen_6DED_windowEvents = CarePass_BodyMeasurements_New_windowEvents = function() {

        $('#CarePass_BodyMeasurements_New').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#CarePass_BodyMeasurements_New').bind({
            pageshow: function() {
                Helper.showOverview();
                Helper.fixFooterNavbar(this);
                Helper.setCurrentDate("addMDate");
                $(".addMH, .addMM, .addMS").attr("maxlength", 2);
                try {
                    MeasurementUnits.execute({})
                } catch (ex) {
                    console.log(ex.name + '  ' + ex.message);
                    hideSpinner();
                };
            },
        });

    }

    // device events
    CarePass_BodyMeasurements_New_deviceEvents = function() {

        document.addEventListener("deviceready", function() {
            $(document).unbind('offline ').bind({
                "offline": function() {
                    Appery.navigateTo('CarePass_ErrorPopUp', {
                        transition: 'pop'
                    });
                },
            });

        });
    }

    // screen elements extra js
    screen_6DED_elementsExtraJS = CarePass_BodyMeasurements_New_elementsExtraJS = function() {
        // screen (CarePass_BodyMeasurements_New) extra code

        /* addMType */

        $("#CarePass_BodyMeasurements_New_addMType").parent().find("a.ui-btn").attr("tabindex", "1");

        /* addMUnits */

        $("#CarePass_BodyMeasurements_New_addMUnits").parent().find("a.ui-btn").attr("tabindex", "10");

        /* addMDate */

        CarePass_BodyMeasurements_New_addMDate_selector = "#CarePass_BodyMeasurements_New_addMDate";
        CarePass_BodyMeasurements_New_addMDate_dataPickerOptions = {
            dateFormat: "yy-mm-dd",
            firstDay: 1,

            maxDate: new Date(""),

            minDate: new Date(""),

            dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
            monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            showOtherMonths: true
        };

        CarePass_BodyMeasurements_New_addMDate_dataPickerOptions.defaultDate = new Date("02/26/2013");

        Appery.__registerComponent('addMDate', new Appery.ApperyMobileDatePickerComponent("CarePass_BodyMeasurements_New_addMDate", CarePass_BodyMeasurements_New_addMDate_dataPickerOptions));

        /* addMAmPm */

        $("#CarePass_BodyMeasurements_New_addMAmPm").parent().find("a.ui-btn").attr("tabindex", "7");

    }

    // screen elements handler
    screen_6DED_elementsEvents = CarePass_BodyMeasurements_New_elementsEvents = function() {

        $("a :input,a a,a fieldset label").live({
            click: function(event) {
                event.stopPropagation();
            }
        });

        $('#CarePass_BodyMeasurements_New_mobileheader [name="mobilenavbaritem4_3"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery.navigateTo('CarePass_BodyMeasurements', {
                        reverse: false
                    });

                }
            },
        });

        $('#CarePass_BodyMeasurements_New_mobileheader [name="mobilenavbaritem4_5"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery.navigateTo('CarePass_Fitness_Activity_TimeLine', {
                        reverse: false
                    });

                }
            },
        });

        $('#CarePass_BodyMeasurements_New_mobilecontainer [name="addMType"]').die().live({
            change: function() {
                try {
                    MeasurementUnits.execute({})
                } catch (ex) {
                    console.log(ex.name + '  ' + ex.message);
                    hideSpinner();
                };
            },
        });

        $('#CarePass_BodyMeasurements_New_mobilecontainer [name="addMH"]').die().live({
            focus: function() {
                setText('CarePass_BodyMeasurements_New_addMH', '');
            },
        });

        $('#CarePass_BodyMeasurements_New_mobilecontainer [name="addMM"]').die().live({
            focus: function() {
                setText('CarePass_BodyMeasurements_New_addMM', '');
            },
        });

        $('#CarePass_BodyMeasurements_New_mobilecontainer [name="addMS"]').die().live({
            focus: function() {
                setText('CarePass_BodyMeasurements_New_addMS', '');
            },
        });

        $('#CarePass_BodyMeasurements_New_mobilecontainer [name="addMPost"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Validation.MeasurementsForm();

                }
            },
        });

        $('#CarePass_BodyMeasurements_New_mobilefooter1 [name="mobilenavbaritem4_11"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery.navigateTo('CarePass_Fitness_Activity_All', {
                        reverse: false
                    });

                }
            },
        });
        $('#CarePass_BodyMeasurements_New_mobilefooter1 [name="mobilenavbaritem4_12"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery.navigateTo('CarePass_Fitness_Activity_New', {
                        reverse: false
                    });

                }
            },
        });
        $('#CarePass_BodyMeasurements_New_mobilefooter1 [name="mobilenavbaritem4_13"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery.navigateTo('CarePass_Fitness_Activity_Filter', {
                        reverse: false
                    });

                }
            },
        });

    }

    $("#CarePass_BodyMeasurements_New").die("pagebeforeshow").live("pagebeforeshow", function(event, ui) {
        CarePass_BodyMeasurements_New_beforeshow();
    });

    if (runBeforeShow) {
        CarePass_BodyMeasurements_New_beforeshow();
    } else {
        CarePass_BodyMeasurements_New_onLoad();
    }

}

$("#CarePass_BodyMeasurements_New").die("pageinit").live("pageinit", function(event, ui) {
    Appery.processSelectMenu($(this));
    CarePass_BodyMeasurements_New_js();
});